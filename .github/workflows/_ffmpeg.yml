name: cc_ffmpeg

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_TERM_COLOR: always

on:
  workflow_call:
    inputs:
      pushed_tag:
        default: '0'
        required: true
        type: string
      platform:
        default: 'ubuntu-latest'
        required: true
        type: string
      target:
        default: 'x86_64-unknown-linux-gnu'
        required: true
        type: string
      binary:
        default: 'bin'
        required: true
        type: string

jobs:
  cross-release:
    name: publish - ${{ inputs.target }}
    runs-on: ${{ inputs.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (Unix)
        if: ${{ inputs.platform != 'windows-latest' }}
        run: |
          if [ "${{ inputs.platform }}" = "ubuntu-latest" ]; then
            sudo apt update
            sudo apt install -y --no-install-recommends clang llvm curl pkg-config yasm nasm tree
          elif [ "${{ inputs.platform }}" = "macos-latest" ]; then
            brew install llvm yasm nasm tree
          fi
      - name: Install dependencies (Windows)
        if: ${{ inputs.platform == 'windows-latest' }}
        run: |
          choco install llvm
          choco install yasm
          choco install nasm
          choco install tree
      - name: Cargo Build
        if: ${{ inputs.platform != 'windows-latest' }}
        run: |
          curl -fsSL https://sh.rustup.rs | sh -s -- -y
          rustup update nightly && rustup default nightly
          cargo build --release
      - name: Publish
        run: |
          echo $BIN
          echo $BIN_PATH
          echo $RELEASE_TAG
          gh release upload $RELEASE_TAG $BIN_PATH
        env:
          BIN: ${{ inputs.binary }}
          BIN_PATH: "target/release/${{ inputs.binary }}" 
          RELEASE_TAG: ${{ inputs.pushed_tag }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}